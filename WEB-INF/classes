import BH.*;
import java.io.*;
import java.net.*;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.ServletException;
import java.io.IOException;
import javax.servlet.*;
import javax.servlet.http.*;
import java.io.*; 
import java.util.*;
import java.util.function.*;
import static java.util.Arrays.asList;
import java.text.DateFormat;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;


public class Servlet extends HttpServlet{
      private    List<String[]>   sessions;
      private String userString="";
      static TheLockableStore mysql_store;
      private    DateFormat df;
     
      public void init(){
        mysql_store=new TheLockableStore();
        sessions=new ArrayList<String[]>();
        df=DateFormat.getDateTimeInstance(DateFormat.LONG,DateFormat.LONG);
      }
      
        @Override
	public void doGet(HttpServletRequest req, HttpServletResponse res)
	throws IOException
        
        {
		
            if ((!(req.getParameter("task")==null))&&(req.getParameter("task").trim().equals("0")))
            {
                
	          	PrintWriter out = res.getWriter();
	          	out.println("<html>");
	          	out.println("<body>");
	           	out.println("<h1>SOMETHING WENT REALLY WRONG!!! RESTART THE SERVLET!!</h1>");
	          	out.println("<a href=\"index.html\">Go-Back To Home Page</a>");
              out.println("</body>");
		          out.println("</html>");
                return;
            } 
            
            Consumer <String> forwardTo =(s) ->ForwardTo(s,req,res);
            boolean is_first_visit=true;
            
            String sessionString = req.getParameter("sessionString");
            
            String[] this_session=new String[3];
            
          for (String [] a_session :sessions) {
            if (a_session[0].equals(sessionString)) {  //Found an active session
                is_first_visit=false;
                this_session=a_session;
                break;
            }
        }
            
            
            if ((!(req.getParameter("task")==null))&&(req.getParameter("task").trim().equals("1"))&& (is_first_visit))  
            {   
                //This would get the random string. 
                String myString=getRandomString();
                userString=myString;
                String[] new_session = {myString,df.format(new Date()),req.getParameter("username")};
                sessions.add(new_session);
                this_session=new_session;
                req.setAttribute("sessionString", myString );
                forwardTo.accept("getInfo.jsp");
                return; 
            }
           
            //This takes task two which is to add an entry to the database.
            if ((!(req.getParameter("task")==null))&&(req.getParameter("task").trim().equals("2"))&& (!(is_first_visit))) 
            {
                mybean bean=new mybean();
               
                mysql_store.lock();  
                try { 
                   
                   bean.getting();
                 } 
                finally 
                {
                      mysql_store.unlock();
                }
                req.setAttribute("sessionString" , userString);
                req.setAttribute("myString" , bean.username[0]);
                req.setAttribute("myString1" , bean.username[1]);
                req.setAttribute("myString2" ,bean.username[2]);
                req.setAttribute("myString3" , bean.username[3]);
                req.setAttribute("myString4" , bean.username[4]);
               
                req.setAttribute("password", bean.password[0]);
                req.setAttribute("password1", bean.password[1]);
                req.setAttribute("password2", bean.password[2]);
                req.setAttribute("password3", bean.password[3]);
                req.setAttribute("password4", bean.password[4]);
                forwardTo.accept("getInfo.jsp");
                
            }
        
        if ((!(req.getParameter("task")==null))&&(req.getParameter("task").trim().equals("3"))) 
        {
            String account=req.getParameter("accountName");
            String password=req.getParameter("accountPassword");
            String check;
            mybean bean=new mybean();     
                mysql_store.lock();  
                try {   
                    check = bean.set(account,password);
                 } 
                finally 
                {
                      mysql_store.unlock();
                }
         
        
        if(check.equalsIgnoreCase("failed"))
            {
              
		          PrintWriter out = res.getWriter();
		          out.println("<html>");
		          out.println("<body>");
		          out.println("<h1>You have excessed the amount of Accounts allowed.</h1>");
		          out.println("<h2>Contact Administrator to upgrade to the premium package.</h2>");
              out.println("<a href=\"getInfo.jsp\">Go-Back Previous Page</a>");
              out.println("</body>");
		          out.println("</html>");
               
            
            }
            else
            {
		req.setAttribute("sessionString" , userString);
                forwardTo.accept("getInfo.jsp");
            }
        }
        
        
      if ((!(req.getParameter("task")==null))&&(req.getParameter("task").trim().equals("4")))
      {
      
            
                int accountNumber= Integer.parseInt(req.getParameter("accountNumber"));
                String account=req.getParameter("accountName");
		String password=req.getParameter("accountPassword");
                 mybean bean=new mybean();
                mysql_store.lock();  
                try {
                    bean.change(accountNumber,account,password);
                 } 
                finally 
                {
                      mysql_store.unlock();
                }
                req.setAttribute("sessionString" , userString);
                forwardTo.accept("getInfo.jsp");
      
      }
        
        
       if ((!(req.getParameter("task")==null))&&(req.getParameter("task").trim().equals("5")))
       {
       
           
           int accountNumber= Integer.parseInt(req.getParameter("accountNumber"));
         
            mybean bean=new mybean();
                mysql_store.lock();  
                try 
                {
                    String check = bean.delete(accountNumber);
                /**/            
                } 
                finally 
                {
                      mysql_store.unlock();
                }
                req.setAttribute("sessionString" , userString);
                forwardTo.accept("getInfo.jsp");
            }  
        }
        //This function will be used for the forward req and res parameters. 
        void ForwardTo(String s,HttpServletRequest req, HttpServletResponse res)
    {
        RequestDispatcher rd= req.getRequestDispatcher(s);
        try {
            rd.forward(req, res);
        } catch (IOException|ServletException is) {
            log(" req from "+s+" not forwarded at ");
            try {
                throw is;
            } catch (Exception e) {
            }
        }
    }


class TheLockableStore extends ReentrantLock {
        mybean bean=new mybean();
       
        public TheLockableStore()
        {       
        
        }
        public void TheDBCall(String[] this_data)
        throws ServletException, IOException{
           
            bean.getting();
        }
    }
  public static String getRandomString(){
        byte[] randbyte=new byte[10];
        Random rand  = new Random(System.currentTimeMillis());
        for (int idx = 0; idx <10; ++idx) {
            int randomInt = rand.nextInt(26); //0<=randomInt<26
            randbyte[idx]=(byte)(randomInt+65);  
        }
        try {
            String rs=new String(randbyte, "UTF-8");
            //System.out.println(rs);
            return rs;
        } catch (Exception e) {
            //System.out.println("bad string");
            return "bad";
        }
    }
        
}

